name: Release

on:
  # Trigger the workflow on the new 'v*' tag created
  push:
    tags:
      - "v*"

jobs:
  build_artifact:
    name: Build dist artifact
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: npm install and build dist
        run: |
          npm ci
          npm run build

      - uses: actions/upload-artifact@main
        with:
          name: dist
          path: dist/

  create_release:
      needs: [build_artifact]
      name: Create the release
      runs-on: ubuntu-latest
      steps:
        - name: Download previously uploaded artifact
          id: download_artifact
          uses: actions/download-artifact@v2
          with:
            name: dist
            path: downloaded_dist  

        - name: Zip dwnloaded artifact
          run: |
            cd downloaded_dist
            zip -r ../dist.zip .
          
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            draft: false
            prerelease: false

        - name: Upload Release Asset
          id: upload-release-asset 
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
            asset_path: ./dist.zip
            asset_name: dist.zip
            asset_content_type: application/zip

      
